openapi: 3.0.0
info:
  title: MOSAÏC API
  description: Documentation OpenAPI de l’API MOSAÏC
  version: 1.0.0
servers:
  - url: http://localhost:3000/api

paths:
  /:
    get:
      summary: Racine de l'API
      description: Retourne le statut de l'API
      responses:
        '200':
          description: Succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string

  /requests:
    get:
      summary: Liste des demandes de maintenance
      parameters:
        - in: query
          name: status
          schema: { type: string }
        - in: query
          name: propertyId
          schema: { type: string }
        - in: query
          name: serviceType
          schema: { $ref: '#/components/schemas/ServiceType' }
      responses:
        '200':
          description: Liste des demandes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MaintenanceRequest'
    post:
      summary: Créer une nouvelle demande de maintenance
      requestBody:
        description: Données de création de la demande
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceRequestCreate'
      responses:
        '201':
          description: Demande créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceRequest'

  /requests/{id}:
    get:
      summary: Détail d'une demande
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Détail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintenanceRequest'
    patch:
      summary: Mise à jour partielle
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceRequestUpdate'
      responses:
        '200':
          description: Mis à jour
    delete:
      summary: Suppression
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '204': { description: Supprimé }

  /requests/{id}/status:
    post:
      summary: Mettre à jour le statut + historiser
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
      responses:
        '200':
          description: OK

  /requests/{id}/status-history:
    get:
      summary: Historique du statut d'une demande
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Historique du statut
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StatusHistory'

  /uploads:
    post:
      summary: Import d'images (multi)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  items: { type: string, format: binary }
      responses:
        '201':
          description: URLs des fichiers
          content:
            application/json:
              schema:
                type: object
                properties:
                  urls:
                    type: array
                    items: { type: string, format: uri }

components:
  schemas:
    ServiceType:
      type: string
      enum: [plumbing, electrical, hvac, general, other]
    Priority:
      type: string
      enum: [low, medium, high]
    MaintenanceRequest:
      type: object
      properties:
        id: { type: integer }
        clientId: { type: string }
        propertyId: { type: string }
        serviceType: { $ref: '#/components/schemas/ServiceType' }
        description: { type: string }
        categoryId: { type: string, nullable: true }
        subcategoryId: { type: string, nullable: true }
        photos:
          type: array
          items: { type: string, format: uri }
        priority: { $ref: '#/components/schemas/Priority' }
        status: { type: string }
        createdAt: { type: string, format: date-time }
        updatedAt: { type: string, format: date-time }
        providerId: { type: string, nullable: true }
        providerName: { type: string, nullable: true }
        providerDistanceKm: { type: number, nullable: true }
        contractUrl: { type: string, nullable: true }

    MaintenanceRequestCreate:
      type: object
      required: [propertyId, serviceType, description]
      properties:
        propertyId: { type: string }
        serviceType: { $ref: '#/components/schemas/ServiceType' }
        categoryId: { type: string }
        subcategoryId: { type: string }
        description: { type: string }
        photos:
          type: array
          items: { type: string, format: uri }
        priority: { $ref: '#/components/schemas/Priority' }

    MaintenanceRequestUpdate:
      allOf:
        - $ref: '#/components/schemas/MaintenanceRequestCreate'

    StatusHistory:
      type: object
      properties:
        id: { type: integer }
        requestId: { type: integer }
        status: { type: string }
        timestamp: { type: string, format: date-time }
        amount:
          type: number
        currency:
          type: string
        status:
          type: string

    Contract:
      type: object
      properties:
        id:
          type: string
        terms:
          type: string
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date

    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string
